* TODO Prove correctness
** Compute block order based on loop depth analysis
** Compute local live sets
** Compute global live sets
** Build live intervals
** Allocate registers to intervals
** Resolve data flow between blocks
** Assign registers to instructions
* TODO Improve handling of register made available to calls
Right now I just drop a single allocation.
* TODO Fix performance issues
* TODO Enter TODO items for all jww comments
* TODO Optimize by moving split positions
** TODO Move split positions outside of inner loops
** TODO Move split positions to block boundaries
* DONE 21 Tempest cases are still failing
* DONE regBlocked test is failing
* DONE Several generated tests fail
* DONE Implement a VM for verifying allocations
* DONE Write more edge-case tests
* DONE Compute lifetime holes
If a variable is last read at position 100, and written to at position 200,
then 100-200 should become a lifetime hole (unless it's in a loop).

There should be no save after 100 and restore before 200, as there is now.
* DONE "Another resolution case" unit test fails
There's an issue demonstrated by my unit tests that shows incorrect move
resolution at loop header blocks.  I've written to Christian about this, since
I'm quite puzzled on this one.  This is the last bit of work needed for
feature completeness on the Coq side.
* DONE Insert pseudo-use positions at loop end blocks
* DONE Resolve admits
